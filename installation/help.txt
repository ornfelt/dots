FZF:
tab for selecting (shift-tab deselect)

CTRL-T - Paste the selected files and directories onto the command-line
CTRL-R - Paste the selected command from history onto the command-line
ALT-C - cd into the selected directory

----------------------------------------------------------------------------------
ST:

Follow urls by pressing alt-L
Copy urls in the same way with alt-Y
Copy the output of commands with alt-O

----------------------------------------------------------------------------------
Ranger:

# Basic
map x- shell chmod -x %s
map x+ shell chmod +x %s

#General
map V console shell nvim%space-o %%s
map cW bulkrename %s
map mkd console mkdir%space
map sc console shell ln -sT%space
map D console delete
#map X shell extract %f
map X shell tar -zxvf %f
map Z shell tar -cvzf %f.tar.gz %f
map <C-g> fzf_select
map <C-f> fzf_select_two
map <C-l> fzf_locate

#Image commands
map bg shell cp %f ~/.config/wall.png && feh --bg-scale %f && rm -rf ~/.cache/wal/schemes && wal -i ~/.config/wall.png
map bw shell wal -c -i %f && cp %f ~/.config/wall.png
map C shell killall w3mimgdisplay && convert -rotate 90 %s %s
map F shell killall w3mimgdisplay && convert -flop %s %s
map bl shell killall w3mimgdisplay && convert %s -resize 1440x1080\> bl_%s
map TR shell convert %s -transparent white %s

map uv      mark_files all=True val=False
map vs       toggle_visual_mode
map uV      toggle_visual_mode reverse=True
map va       mark_files all=True toggle=True
map <Space> mark_files toggle=True
map at      tag_toggle
map ut      tag_remove
map "<any>  tag_toggle tag=%any

map ge cd /etc
map gh cd /home/jonas
map gu cd /usr
#map gl cd -r .
map gL cd -r %f
#map gv cd /var
map gM cd /mnt
map gr cd /
map gR eval fm.cd(ranger.RANGERDIR)
map g? cd /usr/share/doc/ranger
map gd cd ~/Documents
map gw cd ~/Pictures/Wallpapers
map gc cd ~/Documents/Code
map gm cd /media/data/Movies
map gf cd /media/data/Files
map g. cd ~/.config
map ga cd ~/Downloads

map <C-n>     tab_new ~
map <C-w>     tab_close
map <TAB>     tab_move 1
map <S-TAB>   tab_move -1

map ? help
F1: help

----------------------------------------------------------------------------------
NETWORKMANAGER:
nmcli device wifi list
nmcli device wifi connect "SSID" password "$PASSWORD"
nmcli device wifi connect "Jonas's Galaxy S21 5G" password "oyxo"
nmcli device wifi connect "Telia-4E10DF" password "FDC3B3294C"
nm-connection-editor (GUI)

Eduroam:
sudo systemctl start dhcpcd.service
sudo ip link set dev wlp0s20f3 down (old laptop)
sudo ip link set dev wlo1 down
sudo systemctl stop NetworkManager.service
sudo netctl start eduroam

At home:
sudo netctl stop eduroam
sudo systemctl start NetworkManager.service

----------------------------------------------------------------------------------
Realtek drivers:
https://github.com/lwfinger/rtw89

git clone https://aur.archlinux.org/rtw89-dkms-git.git
cd rtw89-dkms-git
makepkg -sri

(above and below is same)
git clone https://github.com/lwfinger/rtw89.git
cd rtw89
make
sudo make install

Then...
(not sure if first is nedded)
# sudo modprobe -v rtw_8852ae
sudo modprobe -v rtw_8852be

Check if device exists with:
ip link
# Show kernel drivers:
lspci -k
# See info about devices and lpci buses
lspci

----------------------------------------------------------------------------------
XINPUT:
xinput list
xinput list-props 14
Look into the output and find “Tapping enabled” Option. From the output above we have "libinput Tapping Enabled (372): 0."
sudo libinput list-devices
You will get a long list of output and for the sake of the article, I have extracted the part related to the Touchpad
Back to enabling the Tap-to-click functionality, we now have all of the variabled we need to enable it.
Do the following to enable Tap-to-click

# Enable or disable touchpad click
xinput set-prop 14 372 0
#OR
xinput set-prop 14 372 1
# Change mouse acceleration: 
xinput set-prop 14 361 0.2

OR:
https://wiki.archlinux.org/index.php/Libinput#Installation

/etc/X11/xorg.conf.d/30-touchpad.conf

Example:
Section "InputClass"
    Identifier "touchpad"
    Driver "libinput"
    MatchIsTouchpad "on"
    Option "Tapping" "on"
EndSection

xinput --set-prop 10 'libinput Accel Speed' -0.5 (this is also a way of setting xinput)

Vertical scrolling enable:
xinput set-prop 10 293 1 1

----------------------------------------------------------------------------------
IMAGEMAGICK:
# resize image to width 25, keeping aspect ratio
convert -geometry 25x src/image1.png out/image1.png

# resize image to height 25, keeping aspect ratio
convert -geometry x25 src/image1.png out/image1.png

# resize image to height 25, keeping aspect ratio with quality 90
convert -resize x25 original_image.jpeg -quality 90 resized_image.jpeg

# create gif from png's:
convert -delay 10 -loop 0 *.png animation.gif

----------------------------------------------------------------------------------
Pacman:
sudo vim /etc/pacman.conf
Uncomment the "IgnorePkg" line by removing the ‘#’ present before them, now add the name of the software package which you want to exclude while updating.

You can also:
sudo pacman -Syu --ignore=vim,linux,linux-headers

sudo pacman-key --init
sudo pacman-key --populate archlinux

sudo -Rns pkg
sudo -Scc will clean pacman cache also

To completely remove all packages (whether they are installed or uninstalled)
from the cache, run the following command:
sudo pacman -Scc

Also:
yay -Scc

----------------------------------------------------------------------------------
GIT:

git clone https://scuzzlebuzzle:<MYTOKEN>@github.com/scuzzlebuzzle/ol3-1.git --branch=gh-pages gh-pages

# After cloning
cd gh-pages
git remote set-url origin https://scuzzlebuzzle:<MYTOKEN>@github.com/scuzzlebuzzle/ol3-1.git
git remote set-url origin https://archornf:<MYTOKEN>@github.com/archornf/dotfiles.git

git push https://$(git_token)@github.com/user_name/repo_name.git
git push https://<MYTOKEN>@github.com/archornf/dotfiles.git

git remote set-url origin https://[APPLICATION]:[NEW TOKEN]@github.com/[ORGANISATION]/[REPO].git
From: https://www.youtube.com/watch?v=Uszj_k0DGsg
git status
git diff file
Add files at patch level: git add -p file
Then you can say y to one change and n to another that isn't part of the same topic...
for example: some changes in index.html will be staged for first commit and other changes can be staged for commit later...

vmornf@gmail.com
vmornf @ github
S33

git remote set-url origin https://ornfelt:<MYTOKEN>@github.com/ornfelt/svea-sdk-dotnet.git

Create pull request:
https://opensource.com/article/19/7/create-pull-request-github

How to merge a specific commit in git:
https://stackoverflow.com/questions/881092/how-to-merge-a-specific-commit-in-git

---------------------
https://devopscube.com/checkout-clone-specific-git-commit-id-sha/
Checkout From Specific Git Commit ID:
Follow the steps to checkout from a specific commit id.

Step 1: Clone the repository or fetch all the latest changes and commits.
Step 2: Get the commit ID (SHA) that you want to checkout. From your local
repository, you can get the commit SHA from the log. If you are using any
platforms like Github, you can get the SHA id from the GUI itself.
git log
Step 3: Copy the commit (SHA) id and checkout using the following command.
git checkout 28cd74decb47d8a5294eb59e793cb24a0f242e9e
You can also use the short form of the SHA ID from the start, as shown below.
git checkout 28cd74de
Step 4: If you want to make changes from the commit ID checkout, you need to create a branch, as shown below.
git checkout -b <new-branch-name> <commit-id-sha>
For example,
git checkout -b test-branch 7d4c59f5

Git Clone From Specific Commit ID:
There is no direct way to clone directly using the commit ID. But you can clone
from a git tag.
However, you can do the following workaround to perform a clone if it is really
necessary.
    Clone the repository
    Perform a hard reset with commit SHA id
git clone <repository>
git reset --hard <COMMIT-SHA-ID>

If you want to revert your HEAD to a specific commit, perform a hard reset with
the latest commit SHA after pulling the changes, as shown below.
git pull
git reset --hard 7d4c59f5

Also see:
https://stackoverflow.com/questions/3489173/how-to-clone-git-repository-with-specific-revision-changeset
How to clone git repository with specific revision/changeset?:
$ git clone $URL
$ cd $PROJECT_NAME
$ git reset --hard $SHA1
To again go back to the most recent commit:
$ git pull

Create pull request:
https://opensource.com/article/19/7/create-pull-request-github

Trace changes to file:
git log --follow -- filename
git log --follow -- {ctrl-t}

----------------------------------------------------------------------------------
Heroku:
heroku login (in terminal)
heroku ps:scale web=1 -a food-wine-pairing-api
heroku ps:scale web=1 -a dineandwine

Heroku: ornfelt2
S33

heroku login
git add -A
git commit -m "..."
git push heroku master

----------------------------------------------------------------------------------
SSH:
Connect to termux through ssh:
ssh u0_a319@192.168.1.151 -p8022 
See source: https://joeprevite.com/ssh-termux-from-computer/

Create script to send backup files to HDD via RBPI:
Copy everything from Code2? Or backup dirs via pwd | xargs script... Print / notify about space remaining when running backup script
See: https://raspberrypi-guide.github.io/filesharing/file-synchronisation-rsync-rclone
rsync -a sourcedirectory/ user@remote-host:destinationdirectory

scp "C:\Users\Svea User\Documents\bd\pressure-icon3.png" pi@raspberrypi:/home/pi/
https://raspberrypi-guide.github.io/filesharing/file-synchronisation-rsync-rclone

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
Other:

xev for checking keybinds (look for after keysym)

pavucontrol for sound control
NetworkManager:
nmcli device wifi list
nmcli device wifi connect "SSID" password "$PASSWORD"
nm-connection-editor (GUI)

nmcli c
nmcli d wifi list
nmcli radio wifi on
:sudo nmcli dev wifi connect OWNIT-B1C0
:sudo nmcli dev wifi connect OWNIT-B1C0 password "4QMHY4Y5QWGFBS"

sudo modprobe 8852be

Firefox gestures:
hold ctrl for zoom, hold alt for swipe gestures...

fc-list : family | sort -f

fc-list | grep -i 'font awesome'
fc-list : family | sort -f | grep -i "JetBrains"

htop I for reverse sort

patch -p1 < file.diff
make clean install

sudo chown -R jonas:jonas /var/test
sudo -Rns pkg
sudo -Scc will clean pacman cache also

echo 10000 > /sys/class/backlight/intel_backlight/brightness
echo 20000 > /sys/class/backlight/intel_backlight/brightness
check max_brightness in max_brightness

TAR:
Untar a “tar.gz”: tar -zxvf file_name.tar.gz OR	tar -C /myfolder -zxvf file_name.tar.gz
Untar a “tar” file: tar -xvf file_name.tar OR tar -C /myfolder -xvf file_name.tar

ZIP:
To compress a directory with zip do the following: zip -r archive_name.zip directory_to_compress
Here’s how you extract a zip archive: unzip archive_name.zip

git remote set-url origin https://scuzzlebuzzle:<MYTOKEN>@github.com/scuzzlebuzzle/ol3-1.git

Run the command "grep -w hub" against your target file and you will only see lines that contain the word "hub" as a complete word.

$ grep -w cat program.c
printf("Hello, cat\n");

If you want your finds to include the line number, just add -n as in:
$ grep -nw cats wish-list

Memory for folder: du -sh

see output from xrandr
xrandr (display)
xrandr --output eDP-1 --auto --output HDMI-1-0

Make hdmi1 right screen of main (eDP-1 for my laptop): xrandr --output HDMI-1-0 --auto --right-of eDP-1
To stop sharing to HDMI1: xrandr --output HDMI-1-0 --off 

:norm I<a href=

cal -y

lspci -vnnn | perl -lne 'print if /^\d+\:.+(\[\S+\:\S+\])/' | grep VGA
lspci and perl

!^ for previous argument or !:1

sudo pacman -Syu exclude:
pacman -Q | grep linux
To stay on kernel version:
sudo vim /etc/pacman.conf
put package in IgnorePkg, for example: Linux and then Linux shouldn't appear

ranger ctrl-f:
#!/bin/sh
if [[ "$1" -eq "-d" ]]; then path_="$2"; shift 2; fi 
place=$(rg -j 50 --color 'ansi' -n --smart-case -e "$*" $path_ | fzf --ansi -1 | awk -F':' -e '{print $1" +"$2}')
if [[ -n "$place" ]]; then ( $TERM -e $SHELL -c "$EDITOR $place" &>/dev/null & ); fi

nmcli device wifi connect "Jonas's Galaxy S21 5G" password "oyxo"
5198
wlp0s20f3
13 for B pass uu
Generate encrypted password

echo -n xx...xx | iconv -t utf16le | openssl md4
sudo systemctl start dhcpcd.service
sudo systemctl stop NetworkManager.service
sudo netctl start eduroam

might need:
sudo ip link set dev wlp0s20f3 down (old laptop)
sudo ip link set dev wlo1 down

sudo netctl restart eduroam

At home:
sudo netctl stop eduroam
sudo systemctl start NetworkManager.service

lspci -k

********* https://bbs.archlinux.org/viewtopic.php?id=244950 *********
https://github.com/rst0git/netctl-eduroam-config (This for hashpass)

For bluetooth:
bluetoothctl
then power on, scan on

if something unblocked when doing rfkill:
rfkill unblock all
sudo systemctl start/enable bluetooth
bluetoothctl power on
bluetoothctl
scan on
connect ...

script to compare text files
diff file1.txt file2.txt
Jamovi:
flatpak run org.jamovi.jamovi

sudo systemctl stop cronie
sudo systemctl start cronie

*mpv and youtube-dl

vim $(fzf)
alias v='nvim $(fzf)'
i3lock -i ~/Downloads/lock-wallpaper.png

vim scp://remoteuser@remote_IP_or_hostname/relative/path/of/file
vim scp://dev-john@10.0.18.12/project/src/main.c
( TIP: If you access a remote machine frequently, you can create an ssh config file to create a shortcut for the connection. Create a file ~/.ssh/config with:
https://www.freecodecamp.org/news/learn-linux-vim-basic-features-19134461ab85/ )

:marks for seeing all bookmarks

cd storage/dcim/Camera (or screenshots etc...)
termux: scp 20XXXX.jpg jonas@ornf:/home/jonas/Pictures

find . -type f -name "*.cs"

# replace BANK CHARGES STRING WITH BANK (because it's too long)
df_fix.StockCode = df_fix.StockCode.apply(lambda x: x.replace('BANK CHARGES', 'BANK') if x == 'BANK CHARGES' else x)
# replace letters in StockCode and replace with the alphabetical order of the letter 
df_fix.StockCode = df_fix.StockCode.apply(lambda x: str(x).replace(letters(x), str(int("".join(str(i) for i in (list(ord(y.upper())-64 for y in letters(x))))))[:4]) if len(letters(x)) > 0 else str(x))
# demo

# Fix weird highlightning on ls (copied folders)
LS_COLORS+=':ow=01;33'
chmod -R a-x,o-w,+X thatGreenFolderWithSubfolders/

Get current network SSID
sudo wpa_cli status | sed -n -e 's/^ssid=//p'

# Get % change of tstock and remove whitespace:
tstock amd -b 1 | sed -n -e 's/^.*change://p' | sed -r 's/\s+//g'
tstock msft -b 1 | sed -n -e 's/^.*change://p' | sed -r 's/\s+//g'

# Get % change of tstock and remove whitespace with awk:
tstock tsla -b 1 | sed -n -e 's/^.*change://p' | awk '{$1=$1};1'

yad --title="VYUU - Right-click image for viewing options" --picture --size=fit --filename=IMG_8678.JPG --width=800 --height=600 --center --inc=256
yad --picture --size=fit --filename="/home/jonas/Pictures/lrc comment.png" --width=800 --height=600 --center --inc=256
yad --calendar

./ioquake3.x86_64 +set sv_pure 0 +set vm_game 0 +set vm_cgame 0 +set vm_ui 0

Grep two words:
grep -in -C 10 "hello" 1.txt | grep -in -C 3 "tensor"

# Highlight both words (doesn't really work as expected?):
grep -in -C 10 "hello" 1.txt | grep -in -E -C 3 "tensor|hello"

# OR:
grep -in -C 10 "hello" 1.txt | grep -in -E "tensor|hello"

# OR:
grep -ERHn "\beasiest\W+(\w+\W+){1,10}new\b" * 
grep -ERHn "\bX\W+(\w+\W+){1,10}Y\b" * 

# Practical examples:
grep -ERHn "\bLog\W+(\w+\W+){1,10}casting\b" * 
grep -rin -C 1 "log" | grep -in -E -C 1 "casting"
grep -rin -C 2 "mount" | grep -in -E -C 2 "shapeshift"
grep -rin -C 1 "spell" | grep -in -E -C 1 "moving"
grep -rin -C 3 "spell" | grep -in -E -C 3 "moving"

----------------------------------------------------------------------------------
Xclip:

ls | xclip -sel clip

ls /usr/lib | grep -rin mygui

ls /usr/lib | grep -in mygui > test2.txt

See pacman install paths:
pacman -Ql mygui

Copy files or working directory:
ls -a | xclip -selection clipboard
pwd | xclip -selection clipboard

----------------------------------------------------------------------------------
SSH:

ssh-keygen

Get key:
cat ~/.ssh/id_rsa.pub

windows (haven't tried):
type ~\.ssh\id_rsa.pub | clip

----------------------------------------------------------------------------------
Use local.run:
ssh -R 80:localhost:8000 nokey@localhost.run

see:
https://localhost.run/
https://github.com/localhost-run/client-service

----------------------------------------------------------------------------------
GDB issues:
Your library probably got updated to a newer version.

Just create a link to the newer versions

sudo ln -s /usr/lib/x86_64-linux-gnu/libboost_program_options.so.1.65.1 /usr/lib/x86_64-linux-gnu/libboost_program_options.so.1.54.0
My versions:
sudo ln -s /usr/lib/libboost_system.so.1.83.0 /usr/lib/libboost_system.so.1.81.0
sudo ln -s /usr/lib/libboost_filesystem.so.1.83.0 /usr/lib/libboost_filesystem.so.1.81.0
sudo ln -s /usr/lib/libboost_atomic.so.1.83.0 /usr/lib/libboost_atomic.so.1.81.0
sudo ln -s /usr/lib/libboost_program_options.so.1.83.0 /usr/lib/libboost_program_options.so.1.81.0
sudo ln -s /usr/lib/libboost_iostreams.so.1.83.0 /usr/lib/libboost_iostreams.so.1.81.0
sudo ln -s /usr/lib/libboost_regex.so.1.83.0 /usr/lib/libboost_regex.so.1.81.0

----------------------------------------------------------------------------------
ncurses problem with openmw:
ls /usr/lib | grep ncurses

sudo ln -s /usr/lib/libncursesw.so.6.4  /usr/lib/libncursesw.so.5
sudo ln -s -f /usr/lib/libncursesw.so.6.4  /usr/lib/libncurses.so.5

sudo ln -s -f /usr/lib/libtinfo.so.6  /usr/lib/libtinfo.so.5

----------------------------------------------------------------------------------
Rust:

cargo new get_order

cargo build
cargo run

If reqwest cannot be found, it's likely because the crate is not included in
your Cargo.toml file:

[dependencies]
reqwest = "0.11" # Check https://crates.io/crates/reqwest for the latest version
tokio = { version = "1", features = ["full"] }
chrono = "0.4"
sha2 = "0.9"
base64 = "0.13"

After adding these dependencies, you need to run cargo build or cargo update to
download and compile these crates.

Please ensure that your Rust toolchain is up to date, as older versions may not
support some features or dependencies. You can update your Rust toolchain by
running:
rustup update

This will update both Rust compiler (rustc) and Cargo (Rust's package manager
and build tool).

----------------------------------------------------------------------------------
dotnet new console -o create_order
dotnet new console -lang F# -o create_order
dotnet new console -lang VB -o create_order

cd create_order
dotnet build && dotnet run

----------------------------------------------------------------------------------
Make sure you have ts installed:
npm install -g typescript

New typescript project (will create tsconfig.json):
tsc --init

Just run:
tsc
The compiled JavaScript files will be placed in the dist directory.
Then:
node example.js

or:
tsc example.js
node example.js

----------------------------------------------------------------------------------
re3:
./premake5Linux --with-librw gmake2
cd build
make help
make config=debug_linux-amd64-librw_gl3_glfw-oal
or:
make config=release_linux-amd64-librw_gl3_glfw-oal

----------------------------------------------------------------------------------
PS AUX:
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND

pgrep node
killall node
pkill node
ps aux | grep node

node &
vmrss xxxx

killall dotnet

----------------------------------------------------------------------------------
Building BLPConverter:
Add this to top of CMakeLists.txt (at line 3 after project and cmake_minimum...
for example):
set (CMAKE_CXX_STANDARD 11)
You also might need CMAKE_CXX_STANDARD 98 to FreeImage CMakeLists...
mkdir build && cd build
cmake -DWITH_LIBRARY=YES ..
sudo make install
sudo cp /usr/local/lib/libblp.so /usr/lib
sudo ldconfig

Building Stormlib:
For debian: sudo apt-get install cmake git gcc zlib1g-dev
git clone https://github.com/ladislav-zezula/StormLib.git
cd StormLib
mkdir build && cd build
cmake .. -DBUILD_SHARED_LIBS=ON
sudo make install
sudo cp /usr/local/lib/libstorm.so /usr/lib
sudo ldconfig

Downgrading npm (not needed):
npm install -g npm@6.0.1

Uninstalling:
sudo pacman -Rsc -n nodejs
sudo pacman -Sy nodejs
sudo pacman -Sy npm

sudo pacman -S c-ares node-gyp nodejs-nopt npm semver yarn nodejs

You can clean the cached packages by running sudo pacman -Sc command. 

Check node / npm versions:
node -v
npm -v
Install n (see nvm for windows)
npm install -g n
You might need something like:
sudo mkdir -p /usr/local/n && chown -R $(whoami) /usr/local/n/
and:
sudo chown -R $(whoami) /usr/local/bin /usr/local/lib /usr/local/include /usr/local/share

Switching sudo node version examples:
sudo n 10.6.0
sudo n 12
or:
sudo n stable / sudo n latest

Useful stuff:
rm package-lock.json
npm cache clear --force
npm install --verbose
npm ci (clean install)

In wowser:
Do this:
vim node_modules/blizzardry/lib/blp/blp-lib.js
exports.default = new _ffiNapi2.default.Library('/usr/local/lib/libblp', {

vim node_modules/blizzardry/lib/mpq/storm-lib.js
exports.default = new _ffiNapi2.default.Library('/usr/local/lib/libstorm', {

npm install
Also see wowser.json in wowser dir for settings.

Remember to do this to use blpconverter script:
sudo cp /usr/local/lib/libblp.so /usr/lib

******************************************
RealmServerPort = 3724
WorldServerPort = 8085

192.168.1.223

UPDATE `realmlist` SET `port`=8086 WHERE `id`=1;
UPDATE `realmlist` SET `port`=8085 WHERE `id`=1;

Login via:
127.0.0.1
3725

******************************************
Do:
npm run proxy 8086 127.0.0.1:8085
npm run proxy 3725 127.0.0.1:3724

npm run gulp
npm run serve
npm run web-dev

----------------------------------------------------------------------------------
Print one level of directories and their sizes:
sudo du --max-depth=1 ~/ | sort -r -k1,1n

----------------------------------------------------------------------------------
Compiling rust-mandelbrot-set:

Possibly also:
rm package-lock.json
rm -rf node_modules

Update the "webpack" version in your package.json to use Webpack 4.x.x instead
of 5.x.x. For example:

"webpack": "^4.44.2"

After making the change, run npm install again, and it should resolve
the dependency conflict. Choose the option that aligns with your project's
requirements and compatibility.

Then:
npm uninstall webpack --save-dev
npm install webpack --save-dev

npm run start, then see:
localhost:9090

OR use my modified fork:
https://github.com/archornf/rust-mandelbrot-set

----------------------------------------------------------------------------------
Getting pacman package info:

pacman -Si csfml

----------------------------------------------------------------------------------
Using git lfs to upload acore_db / tcore_db:

sudo pacman -S git-lfs
In git repo:
git init
git lfs install
git lfs track "acore_world.sql"
git add .gitattributes
git add -A
git commit -m "Adding DB"
git remote add origin https://github.com/archornf/acore_db.git
git push origin master

----------------------------------------------------------------------------------
./main -m ./models/llama-2-7b.Q4_K_M.gguf -n 128
./main -m ./models/llama-2-7b-chat/ggml-model-q4_0.gguf -n 128

./server -m models/llama-2-7b.Q4_K_M.gguf --threads $(nproc) -c 2048
./server -m models/llama-2-7b-chat/ggml-model-q4_0.gguf --threads $(nproc) -c 2048

<<-- 2024-05-18 Sat -->
llama3:
python convert-hf-to-gguf.py /media/2024/ollama/huggingfaces/Meta-Llama-3-8B-Instruct
./quantize /media/2024/ollama/huggingfaces/Meta-Llama-3-8B-Instruct/ggml-model-f16.gguf /media/2024/ollama/huggingfaces/Meta-Llama-3-8B-Instruct/ggml-model-f16-Q4.gguf Q4_K_M

./server -m /media/2024/ollama/huggingfaces/Meta-Llama-3-8B-Instruct/ggml-model-f16-Q4.gguf --threads $(nproc) -c 2048

curl --request POST \
    --url http://localhost:8080/completion \
    --header "Content-Type: application/json" \
    --data '{"prompt": "Building a website can be done in 10 simple steps:","n_predict": 128}'

curl --request POST \
    --url http://localhost:8080/completion \
    --header "Content-Type: application/json" \
    --data '{"prompt": "Write python code for calculating effective interest rate:","n_predict": 500}'

Server load status:
http://localhost:8080/health

./main -m /media/2024/ollama/huggingfaces/Meta-Llama-3-8B-Instruct/ggml-model-f16-Q4.gguf -n -1 --color -r "User:" --in-prefix " " -i -p \
'User: Hi
AI: Hello. I am an AI chatbot. Would you like to talk?
User: Sure!
AI: What would you like to talk about?
User:'

Using in vim:
cp llama.vim ~/.vim/autoload/
Use llm function in vimrc instead...
Not perfect...

----------------------------------------------------------------------------------
Rename files and dirs to lowercase:

This didn't quite work since perl-rename should be used instead of other rename:
rename 'y/A-Z/a-z/' *
This works:
perl-rename 'y/A-Z/a-z/' *

Recursively:
find . -type f -exec perl-rename 'y/A-Z/a-z/' {} +

find . starts the search from the current directory (.).
-type f restricts the search to files only, excluding directories.
-exec allows you to execute a command on all items found.
perl-rename 'y/A-Z/a-z/' {} + calls perl-rename on each file found. The {} is a
placeholder for the current file name, and + at the end runs the command with
as many files as possible at once for efficiency.

This command will lowercase all letters in the filenames of all files found in
the current directory and its subdirectories. However, it does not rename
directories themselves to lowercase. If you want to rename directories too, you
could use a slightly modified command:

find . -depth -execdir perl-rename 'y/A-Z/a-z/' {} \;

-depth ensures the command processes files and directories depth-first, which
is important when renaming directories to avoid issues with changing paths
before all files inside have been processed.
-execdir is similar to -exec but executes the command from the directory of the
found file, which can be safer and more efficient for renaming operations.

----------------------------------------------------------------------------------
Mount external hard drive:
lsblk
sudo fdisk -l
sudo mkdir -p /media
sudo mount /dev/sda1 /media

Automount on Boot (Optional):
sudo nvim /etc/fstab

Add Mount Entry: Add a line to the end of the file with details about your hard
drive. For example:
/dev/sda1 /mnt/external_hd auto defaults,users,rw,nofail 0 0

Unmounting:
sudo umount /media

----------------------------------------------------------------------------------
ueberzugpp:
git clone https://github.com/jstkdng/ueberzugpp.git
cd ueberzugpp
mkdir build && cd build
cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_WAYLAND=ON ..
cmake --build .
sudo make install

----------------------------------------------------------------------------------
scp jonas@raspberrypi:/home/jonas/history /home/jonas/Downloads/rasp_history

----------------------------------------------------------------------------------
On a system running Debian, you can use the apt-cache search command followed
by a keyword to search for packages. This command searches the package
descriptions for the specified keyword.

apt-cache search <keyword>

For example, to search for packages related to "nginx", you would run:
apt-cache search nginx

Similar to apt-cache search, you can use the apt search command, which also
searches the package cache:
apt search <keyword>

This command provides similar functionality but is part of the newer apt tool,
which provides more user-friendly output.

To search for already installed packages, you can use dpkg -l followed by a
pattern. This will list all installed packages that match the pattern.
dpkg -l | grep <keyword>

aptitude is another package manager for Debian that offers a text-based
graphical user interface for package management, including searching for
packages.
aptitude search <keyword>

This command searches for packages similar to apt-cache search and apt search
but within the aptitude interface, which some users might find more intuitive.

******************************************
On arch linux you can search with:

The syntax is as follows for searching packages:
pacman -Ss {pkgNameHere}
pacman -Ss {keyWordHere}
pacman --sync --search packageName

For example, search for nmap, type pacman command:
pacman -Ss nginx

yay -Ss nginx

How to search for a package with pkgfile?

The pkgfile command is nothing but a pacman ‘.files’ metadata explorer. First
install pkgfile using the following syntax:
sudo pacman -S pkgfile

Type the following command to update index:
sudo pkgfile --update

search:
pkgfile nginx

How do I display files provided by a remote package i.e. uninstalled package?
pkgfile -l packageName

How do I perform matching with regular expressions?
pkgfile -r regex
pkgfile -r php*

----------------------------------------------------------------------------------
Using ninja:
cmake -G Ninja ..
ninja

----------------------------------------------------------------------------------
To give all permissions to a folder give chmod -R 777:

sudo chmod -R 777 /var/DirectoryName

Below gives all permissions to everybody to all files and subdirectories:

chmod -R a+rwx path

This command displays information about the directory itself (due to the -d
option), including its permissions:
ls -ld /home/jonas/Downloads/wow_classic/

The output will look something like this:
drwxr-xr-x 2 jonas jonas 4096 Oct  1 12:34 /home/jonas/Downloads/wow_classic/

Here, drwxr-xr-x represents the permissions:

d indicates it's a directory.
The first rwx set shows that the owner (jonas) has read, write, and execute
permissions.
The second r-x set shows that the group (also jonas here) has read and execute
permissions.
The third r-x set shows that others have read and execute permissions.

To allow all actions (read, write, execute) for all users on the directory
/home/jonas/Downloads/wow_classic/ and its contents, you can use the chmod
command with the -R (recursive) option. Be cautious with this, as it can expose
your data to all users on the system. The command is:
sudo chmod -R 777 /home/jonas/Downloads/wow_classic/

chmod changes the file mode (permissions).
-R applies the change recursively to the directory and all its contents.
777 sets the permissions to read, write, and execute for the owner, group, and
others.
/home/jonas/Downloads/wow_classic/ is the path to your directory.

If the issue is not with permissions but rather ownership, you can change the
owner using the chown command. For example, to change the owner to jonas (both
user and group), you would use:
sudo chown -R jonas:jonas /home/jonas/Downloads/wow_classic/

This changes the ownership recursively to the user jonas and the group jonas,
which, combined with appropriate permissions, might be all that's needed for
your application.

******************************************
CMAKE:
cmake -DCMAKE_BUILD_TYPE=Debug ..
cmake -DCMAKE_BUILD_TYPE=Release ..

******************************************
ps aux | grep openjk

kill -9 1396473
killall -9 chrome

To get all process IDs by name:
pgrep process_name

To kill all processes by name:
pkill process_name

To get all process IDs by name and kill them:
ps aux | grep process_name | grep -v grep | awk '{print $2}' | xargs kill

ps aux lists all running processes.
grep process_name filters processes by name. Replace process_name with the
actual name of the process you're targeting.
grep -v grep excludes the grep command itself from the results (since it will
also appear in the list, matching the search term).
awk '{print $2}' extracts the second column, which is the PID.
xargs kill passes the PIDs to the kill command, which terminates the
processes.

If you need to force kill the processes (if they don't terminate gracefully
with SIGTERM), you can use kill -9 instead of kill:
ps aux | grep process_name | grep -v grep | awk '{print $2}' | xargs kill -9

******************************************
OpeneJK:

sed -i '/option(BuildJK2SPEngine /s/OFF)/ON)/; /option(BuildJK2SPGame /s/OFF)/ON)/; /option(BuildJK2SPRdVanilla /s/OFF)/ON)/' ../CMakeLists.txt
cmake -DCMAKE_INSTALL_PREFIX=/home/jonas/.local/share/openjk -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
make -j$(nproc)
sudo make install

To recompile:
cmake .. && make -j$(nproc)
Or just: sudo make install

For japp:
simply compile with:
scons
(On raspberrypi - specify arch = "arm64" or similar in SConstruct (after arch
check code that seems to fail)

Then do .japlus or:
./openjk.x86_64 +set fs_game "japlus"
quit game and:
cp *.so ~/.local/share/openjk/japlus
or:
sudo cp uix86_64.so jampgamex86_64.so cgamex86_64.so ~/.local/share/openjk/japlus/

Get *.so files:
ls -l | grep '\.so$'
Get only filename:
ls -l | grep '\.so$' | awk '{print $NF}'

Get *.so files with find:
find . -name '*.so'

For Limiting the Search to One Level:
find . -maxdepth 1 -name '*.so'

Only file name:
find . -maxdepth 1 -name '*.so' -exec basename {} \;

After copying compiled shared libraries, also copy files from japp-assets to:
~/.local/share/openjk/japlus/
like:
sudo cp -r ~/joja/ja/japp-assets/* ~/.local/share/openjk/japlus/
also edit modelscale.cfg and modify lua/sv/modelscale/plugin.lua if needed!

Commands:
https://jkhub.org/tutorials/console-commands-cvars/all-console-commands-cheats-r15/
https://jkhub.org/files/file/602-yoda-vm/

Notes on modelscale:
https://jkhub.org/forums/topic/7522-modelscales/

For jk2mv, place pk3s in ~/.jk2mv and run with:
jk2mvmp

JediOutcast files needs to be in both dirs like:
sudo cp -r /home/jonas/.jk2mv/base /home/jonas/.local/share/openjk/JediOutcast/

JediAcademy files in:
/home/jonas/.local/share/openjk/base
or:
/home/jonas/.local/share/openjk/JediAcademy/base

******************************************
Recursively add chmod +x to *.sh:

find . -type f -name "*.sh" -exec chmod +x {} \;

