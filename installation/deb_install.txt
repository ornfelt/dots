----------------------------------------------------------------------------------
https://www.debian.org/releases/bookworm/debian-installer/
https://archlinux.org/download/

Follow graphical install, then:

su - / sudo su
Enter host passwd
apt-get install git neovim sudo tmux network-manager
usermod -aG sudo jonas
Also do:
usermod -aG audio,video,input jonas

sudo nmcli device wifi connect OWNIT-B1C0 password XXX
*OBS! If intel wifi, then you might have to:
sudo apt install iwlwifi (firmware-iwlwifi?) and reboot...

EDITOR=nvim visudo
At the end of the /etc/sudoers file add this line: 
jonas     ALL=(ALL) NOPASSWD:ALL
* Important - add this as last line (but probably above @includedir ...)

exit
sudo reboot

Update sources list:
https://www.itzgeek.com/how-tos/linux/debian/setup-debian-11-official-repository-in-sources-list-etc-apt-sources-list.html

Add "contrib non-free" to every line, uncomment lines with deb-src, then do:
sudo apt update && sudo apt upgrade
For newer debian versions, it suffices to just uncomment the deb-src lines...

/etc/apt/sources.list

Add "contrib non-free" to the end of each line...

Also install apt-transport-https if needed:
Some sources might require HTTPS. Install the apt-transport-https package if
it's not already installed:
sudo apt-get install apt-transport-https

sudo apt-get install libsdl2-mixer-dev

cd $HOME
mkdir Downloads
cd Downloads
git clone https://github.com/archornf/dotfiles
Install packages with install.sh
Run setup.sh to setup stuff and clone projects

******************************************
# wezterm

Install latest rust:
sudo apt remove rustc

curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

###curl https://sh.rustup.rs -sSf | sh -s
git clone --depth=1 --branch=main --recursive https://github.com/wez/wezterm.git
cd wezterm
git submodule update --init --recursive
./get-deps
cargo build --release

Running:
cargo run --release --bin wezterm -- start
no wayland support:
cargo build --release --no-default-features --features vendored-fonts

Copy files (use sudo installs from below instead):
source_dir="$CODE_ROOT_DIR/Code2/Rust/wezterm/target/release/"
dest_dir="/usr/local/bin"

# Use find to locate all files in the source dir (excluding dirs)
# and then copy them to destination
find "$source_dir" -type f -exec cp {} "$dest_dir" \;

Do this instead:
cd target/release
mkdir -p /usr/local/bin /etc/profile.d
sudo install -Dm755 ../../assets/open-wezterm-here wezterm wezterm-gui wezterm-mux-server strip-ansi-escapes -t /usr/local/bin
sudo install -Dm644 assets/shell-integration/* -t /etc/profile.d
sudo install -Dm644 assets/shell-completion/zsh /usr/local/share/zsh/site-functions/_wezterm
sudo install -Dm644 assets/shell-completion/bash /etc/bash_completion.d/wezterm

******************************************
Fix python config and packages!

Install potentially missing packages via:
./installation/packages/debian/deb_pkgs.txt

compile neovim and picom manually
Do PackerInstall...
Fetch .batch_profile from drive with firefox:
Proceed with compiling rest with setup.sh

Setup settings in xfce4-power-manager-settings (display should never sleep) 

lxappearance -> set gruvbox-dark
thunar:
view -> show hidden files
view -> location selector -> buttons style
bookmarks: docs, down, pics, repos, Code/c++, General, tools

* hmm, which picom to use?
https://github.com/ornfelt/picom-animations
https://github.com/pijulius/picom
https://github.com/FT-Labs/picom

firefox:
imagus, vimium, adblock, js-injector

******************************************
curl -o arch_install.txt https://raw.githubusercontent.com/archornf/dotfiles/master/installation/arch_install.txt
wget -O arch_install.txt https://raw.githubusercontent.com/archornf/dotfiles/master/installation/arch_install.txt

curl -o deb_install.txt https://raw.githubusercontent.com/archornf/dotfiles/master/installation/deb_install.txt
wget -O deb_install.txt https://raw.githubusercontent.com/archornf/dotfiles/master/installation/deb_install.txt

******************************************
# TrinityCore:
# For latest mysql-apt repository, check url from https://dev.mysql.com/downloads/repo/apt/
wget https://dev.mysql.com/get/mysql-apt-config_0.8.29-1_all.deb -O /tmp/mysql-apt-config_all.deb
sudo DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_all.deb
# Not needed?
sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100
sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang 100

******************************************
# Python configuration

python3 -m venv .venv
source .venv/bin/activate
Then:
python3 -m pip install -r requirements.txt

Or:
pip install xyz --break-system-packages

Or (use this):
mkdir -p ~/.config/pip/
vim ~/.config/pip/pip.conf
Add this:
[global]
break-system-packages = true

pip3 install bs4 requests ocrspace pytesseract pynvim i3ipc pyperclip cogapp

******************************************
# Other stuff

git clone https://github.com/jmattheis/gruvbox-dark-gtk ~/.themes/gruvbox-dark-gtk
Set gruvbox-dark theme through lxappearance (should appear through dmenu)

# sudo cp /etc/X11/xinit/xinitrc ~/.xinitrc
# sudo localectl set-x11-keymap se (then sudo reboot)

git clone polybar themes and run the starting script
then copy files from dotfiles to .config
git clone --depth=1 https://github.com/adi1090x/polybar-themes.git
cd polybar-themes
chmod +x setup.sh
./setup.sh

If JetBrainsMono can't be installed from apt:
cd ~/Downloads && wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip
mkdir -p ~/.local/share/fonts/ && unzip JetBrainsMono.zip -d ~/.local/share/fonts/
fc-cache -fv

Manual install:
https://www.nerdfonts.com/font-downloads
Download Jetbrains from above and copy the files to either:
~/.fonts/
or:
~/.local/share/fonts/
restart or use: fc-cache -fv

install oh-my-zsh:
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

install zsh autosuggestions and zsh-syntax-highlighting:
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

cd ~/Downloads && git clone https://github.com/archornf/dotfiles
Copy files from config!

For ST:
And uncomment the line f->badweight = 1; in x.c

If sudo apt install ueberzug fails:
pip3 install setuptools
git clone https://github.com/WhiteBlackGoose/ueberzug-latest && cd ueberzug-latest
sudo pip install -e .

For dwm, fix battery, volume and cputemp scripts (remove unnecessary
whitespace, add /usr/bin/bash instead of /bin/sh, and use sb-volume_deb. Also
need to add correct click/scroll for dwmblocks to sb-battery... Also update
keybinds for volume in dwm conf.

For tesseract ocr:
(need to install eng trained data for tesseract-ocr also. Look for
towardsdatascience python read text from image)... Also set tesseract
variable...
Download:
https://github.com/tesseract-ocr/tessdata/blob/main/eng.traineddata
And place in /home/jonas/.local/share/tessdata

Might need to change TESSDATA_PREFIX in tesseract_ocr to /home/jonas/.local/share/tessdata
And change scripts to /usr/bin/bash and /usr/bin/python3...

******************************************
# wine
sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install wine32:i386

https://wiki.debian.org/Wine

Do this if needed:
rm -rf $HOME/.wine
wineboot --init

******************************************
# rust

https://www.rust-lang.org/tools/install
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

******************************************
# dotnet

https://learn.microsoft.com/en-us/dotnet/core/install/linux-debian

wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
rm packages-microsoft-prod.deb

->

sudo apt-get update && sudo apt-get install -y dotnet-sdk-8.0
sudo apt-get update && sudo apt-get install -y dotnet-sdk-9.0

These may not work but you can try them as well:
sudo apt-get update && sudo apt-get install -y aspnetcore-runtime-8.0
sudo apt-get update && sudo apt-get install -y aspnetcore-runtime-9.0

sudo apt-get install -y dotnet-runtime-8.0
sudo apt-get install -y dotnet-runtime-9.0

Old notes:

See: https://learn.microsoft.com/en-us/dotnet/core/install/linux-debian
Do this for Debian 12:
wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
rm packages-microsoft-prod.deb

sudo apt-get update && sudo apt-get install -y dotnet-sdk-8.0
sudo apt-get update && sudo apt-get install -y aspnetcore-runtime-8.0

If the above doesn't work, follow scripted install instead:
https://learn.microsoft.com/en-us/dotnet/core/install/linux-scripted-manual#scripted-install

wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
chmod +x ./dotnet-install.sh
./dotnet-install.sh --version latest
./dotnet-install.sh --version latest --runtime aspnetcore

******************************************
Greenclip:

wget https://github.com/erebe/greenclip/releases/download/v4.2/greenclip -O ~/.local/bin/greenclip

* OBS: now included in dotfiles repo...

******************************************
# docker

https://docs.docker.com/engine/install/debian/

******************************************
# spotify

For spotify (debian 12):
sudo mkdir -p /etc/apt/keyrings
curl -sSf https://download.spotify.com/debian/pubkey_7A3A762FAFD4A51F.gpg | gpg --dearmor | sudo tee /etc/apt/keyrings/spotify.gpg > /dev/null
echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/spotify.gpg] http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list
sudo apt update
sudo apt install spotify-client

# The spotify package is currently broken and installs files owned by uid 1000, fix it
dpkg -L spotify-client | sudo xargs chown --no-dereference root:root

Use this instead!
https://github.com/Rigellute/spotify-tui
Or:
https://github.com/aome510/spotify-player

******************************************
# picom

https://github.com/pijulius/picom
sudo apt remove picom, then:
#git submodule update --init --recursive
meson --buildtype=release . build
ninja -C build
sudo ninja -C build install
Start picom with picom --animations

******************************************
# eclipse

https://wiki.debian.org/Eclipse

Download eclipse installer,
tar -zxvf eclipse-inst-jre-linux64.tar.gz
then:
cd eclipse-installer && ./eclipse-inst
https://wiki.debian.org/Eclipse

Install path for binary is automatically:
/home/jonas/eclipse/java-2024-06/eclipse
And working dir:
/home/jonas/eclipse-workspace

Change to dark mode:
Window -> Preferences -> General -> Appearance -> Theme: Dark

Install vim:
Help -> Eclipse marketplace
Vrapper (vim)

* Note on running jar files:
When creating a runnable jar file in eclipse you might need to use the same
java version as eclipse uses...
since java --version is too low... See 'which java'.
See: /home/jonas/eclipse/java-2024-06/eclipse/eclipse.ini

which looks like this:

-startup
plugins/org.eclipse.equinox.launcher_1.6.800.v20240513-1750.jar
--launcher.library
/home/jonas/.p2/pool/plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.2.1000.v20240506-2123
-product
org.eclipse.epp.package.java.product
-showsplash
/home/jonas/.p2/pool/plugins/org.eclipse.epp.package.common_4.32.0.20240606-1231
--launcher.defaultAction
openFile
--launcher.appendVmargs
-vm
/home/jonas/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.linux.x86_64_22.0.1.v20240426-1149/jre/bin/java
-vmargs
-Dorg.eclipse.ecf.provider.filetransfer.excludeContributors=org.eclipse.ecf.provider.filetransfer.httpclientjava
-Dosgi.requiredJavaVersion=21
-Dosgi.instance.area.default=@user.home/eclipse-workspace
-Dosgi.dataAreaRequiresExplicitInit=true
-Dorg.eclipse.swt.graphics.Resource.reportNonDisposed=true
-Declipse.e4.inject.javax.warning=false
-Dsun.java.command=Eclipse
-Xms256m
-Xmx2048m
-XX:+UseG1GC
-XX:+UseStringDeduplication
--add-modules=ALL-SYSTEM
-Djava.security.manager=allow
-Declipse.p2.max.threads=10
-Doomph.update.url=https://download.eclipse.org/oomph/updates/milestone/latest
-Doomph.redirection.index.redirection=index:/->https://raw.githubusercontent.com/eclipse-oomph/oomph/master/setups/
--add-opens=java.base/java.lang=ALL-UNNAMED

Then to run wowbot for example:

/home/jonas/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.linux.x86_64_22.0.1.v20240426-1149/jre/bin/java -jar wowbot.jar 1 1 "0,80"

******************************************
# Android studio
https://wiki.debian.org/AndroidStudio

Steam:
https://wiki.debian.org/Steam#Installing_Steam

For virtualbox:
sudo apt install -y virtualbox-guest-utils virtualbox-guest-X11
Virtualbox guest utils doesn't work it seems... See:
https://techviewleo.com/install-virtualbox-guest-additions-on-debian/

Maybe try this:
git clone --recursive https://github.com/ornfelt/Debian-Hyprland/
cd Debian-Hyprland && ./install.sh

******************************************
Missing packages - install manually:

gruvbox-dark-gtk
ttf-icomoon-feather
ttf-iosevka-nerd
ttf-joypixels

******************************************
sudo systemctl enable bluetooth.service
sudo systemctl enable NetworkManager.service
More services nginx, firewall etc...

----------------------------------------------------------------------------------
#sudo apt-get update -y && sudo apt-get upgrade -y
#sudo apt-get install -y

